{"version":3,"sources":["Component/Evolutions/Evolutions.module.css","Component/Scroll/Scroll.module.css","Component/Varieties/Varieties.module.css","Component/Cap.js","Component/TheSprite/TheSprite.js","Component/PkmnHomeList/PkmnHomeList.js","Component/Scroll/Scroll.js","All.js","Component/RandomPk/RandomPk.js","Home.js","Component/Evolutions/EvoSprites.js","Component/Evolutions/Evolutions.js","Component/Varieties/PkVariety/PkVariety.js","Component/Varieties/Varieties.js","Component/Type/Type.js","Component/TheDetails/TheDetails.js","Component/PokeMn/PokeMn.js","Component/ErrorPage/ErrorPage.js","App.js","reportWebVitals.js","index.js","Component/TheDetails/TheDetails.module.css"],"names":["module","exports","capitalize","input","newInput","split","join","i","length","toUpperCase","substr","TheSprite","pokemon","useState","pkPic","setPkPic","pkPicShiny","setPkPicShiny","pkId","setPkId","pkName","setPkName","DefaultStats","pkDetails","setPkDetails","currentPic","setCurrentPic","setTheError","fetchInfo","a","fetch","url","res","json","data","sprites","front_default","front_shiny","species","map","string","parseInt","filter","x","name","useEffect","firstCap","Tylers_Cap_Function","target","to","onMouseEnter","onMouseLeave","className","types","type","src","alt","PkmnHomeList","pkList","Scroll","document","body","scrollHeight","theMid","setTheMid","console","log","styles","theWholeRight","topDiv","onClick","window","scrollTo","top","left","behavior","midDiv","botDiv","theWholeLeft","All","props","DefaultPkmn","setPklist","fetchAPI","results","page","RandomPk","Math","floor","random","theNum","setTheNum","currentPicShiny","setCurrentPicShiny","fetchPoke","transform","changeBack","transformShiny","changeBackShiny","bothTransform","bothChangeBack","Home","rel","href","style","fontWeight","EvoSprite","theSpeciesNum","eachPk","id","width","Evolutions","DefaultEvo","theChain","setTheChain","fetchPokeData","evoChain","evolutionBox","checkFirst","firstEvolution","chain","checkSecond","evolves_to","thePoke","evos","secondEvolution","checkThird","lastEvos","j","thirdEvolution","PkVariety","setName","pic","setPic","picShiny","setPicShiny","Varieties","pokeData","theSpecies","setTheSpecies","theArr","varieties","thePkContainer","forms","forEach","push","shift","sort","theFunc","containAllForms","formContainer","TheTypes","allTypes","theTypes","Set","type1","type2","color1","setColor1","color2","setColor2","background","border","padding","display","borderLeft","clipPath","textAlign","TypeColor","fontColor","TheDetails","DefaultSpecies","setPokeData","setEvoChain","theDeets","setTheDeets","evolution_chain","mainDeetDiv","Type","details","deetSiblings","height","weight","color","shape","genera","genus","generation","regular","altText","shiny","shinyCheck","dex","theStuff","flavor_text_entries","pkFlavorText","language","flavor_text","textFlavor","containsAllEvos","theName","formCheck","PokeMn","ErrorPage","routes","Component","key","path","App","exact","render","ThePoke","match","params","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.51524631.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"evolutionBox\":\"Evolutions_evolutionBox__1S6v2\",\"firstEvolution\":\"Evolutions_firstEvolution__2yviQ\",\"secondEvolution\":\"Evolutions_secondEvolution__ZEqQp\",\"thirdEvolution\":\"Evolutions_thirdEvolution__3Bofj\",\"checkFirst\":\"Evolutions_checkFirst__eFWKg\",\"checkSecond\":\"Evolutions_checkSecond__2vl3d\",\"checkThird\":\"Evolutions_checkThird__11jH7\",\"eachPk\":\"Evolutions_eachPk__3piFC\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"theWholeLeft\":\"Scroll_theWholeLeft__1CfHn\",\"theWholeRight\":\"Scroll_theWholeRight__L0zVZ\",\"topDiv\":\"Scroll_topDiv__6Ns0r\",\"midDiv\":\"Scroll_midDiv___cPjB\",\"botDiv\":\"Scroll_botDiv__3d8_r\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formContainer\":\"Varieties_formContainer__30PQj\",\"thePkContainer\":\"Varieties_thePkContainer__Ji31b\",\"containAllForms\":\"Varieties_containAllForms__3FYQc\"};","//////////////////////////////////////////////////////////////////////////////////////\n//////////////////    Thanks to Tlyler (This is Tylers Function)     /////////////////\n//////////////////////////////////////////////////////////////////////////////////////\nconst capitalize = (input) => {                                                     //\n    ///////// edited the code for my purposes ////////                              //\n    let theInput = input.split(\"-\");              ////                              //\n    const theInputJoin = theInput.join(\" \")       ////                              //\n    let newInput = theInputJoin.split(' ');       ////                              //\n    //////////////////////////////////////////////////                              //\n    for(let i = 0; i < newInput.length; i++) {                                      //\n        newInput[i] = newInput[i][0].toUpperCase() + newInput[i].substr(1);         //\n    }                                                                               //\n    return newInput.join(' ');                                                      //\n}                                                                                   //\n//////////////////////////////////////////////////////////////////////////////////////\nexport default capitalize;","import { useEffect, useState } from \"react\";\nimport Tylers_Cap_Function from \"../Cap\"\nimport DefaultStats from \"../DefaultStats.json\"\nimport {Link} from \"react-router-dom\"\n\nexport default function TheSprite ({pokemon}) {\n    const [pkPic, setPkPic] = useState(\"\")\n    const [pkPicShiny, setPkPicShiny] = useState(\"\")\n    const [pkId, setPkId] = useState(\"\")\n    const [pkName, setPkName] = useState(\"ditto\")\n    const [pkDetails, setPkDetails] = useState(DefaultStats)\n    const [currentPic, setCurrentPic] = useState(pkPic)\n    const [theError, setTheError] = useState(\" \")\n\n\n    const fetchInfo = async() => {\n        try {\n            const res = await fetch(pokemon.url);\n            const data = await res.json();\n            setPkPic(data.sprites.front_default)\n            setPkPicShiny(data.sprites.front_shiny)\n            setPkId(data.species.url.split(\"/\").map((string) => parseInt(string)).filter((x) => x>0)[0])\n            setPkName(data.species.name)\n            setCurrentPic(data.sprites.front_default)\n            setPkDetails(data)\n        } catch (err) {\n            setTheError(`${err}`);\n        }\n    }\n    const handleMouseOver= () => {\n        setCurrentPic(pkPicShiny);\n     }\n     \n    const handleMouseLeave = () => {\n        setCurrentPic(pkPic);\n     }\n    useEffect(()=> {\n      fetchInfo();\n    }, [pokemon])\n    const firstCap = Tylers_Cap_Function(pkName)\n    return (\n        <div>\n            <Link target='_blank' to={`/All/${pkId}`}>\n                <div onMouseEnter={handleMouseOver} onMouseLeave={handleMouseLeave} className=\"spriteBox\">\n                    <h4>{pkId}-{firstCap}</h4>\n                    <div>\n\n                        {pkDetails.types.map((type,i) => {\n                            return(\n                                <p key={i} className={`${type.type.name} types`}>{Tylers_Cap_Function(type.type.name)} </p>\n                                )\n                            })}\n                    </div>\n                    <img className={\"allPageSprites\"} src={currentPic} alt={pkName} />\n                </div>\n            </Link>\n        </div>\n    )\n}","import TheSprite from \"../TheSprite/TheSprite\"\n\nexport default function PkmnHomeList ({pkList}) {\n    return (\n        <div className={`pkContainer`}>\n            {pkList.map((pokemon, i) => {\n                return( \n                    <TheSprite pokemon={pokemon}/>\n                )\n            })}\n        </div>\n    )\n}\n\n","import styles from \"./Scroll.module.css\"\nimport {useState, useEffect} from \"react\"\n\nexport default function Scroll () {\n    const [theMid, setTheMid] = useState(document.body.scrollHeight/2)\n    console.log(theMid)\n    useEffect(()=>{\n        setTheMid(document.body.scrollHeight/2);\n    },[])\n    return (\n        <div>\n            <div className={styles.theWholeRight}>\n                <div className={styles.topDiv} onClick={() => {\n                    setTheMid(document.body.scrollHeight/2);\n                    window.scrollTo({\n                        top: 0,\n                        left: 0,\n                        behavior: 'smooth'\n                    })\n                }}>\n                    <h2>↑</h2>\n                </div>\n                <div className={styles.midDiv} onClick={() => {\n                    setTheMid(document.body.scrollHeight/2);\n                    window.scrollTo({\n                        top: theMid,\n                        left: 0,\n                        behavior: 'smooth'\n                    })\n                }}>\n                </div>\n                <div className={styles.botDiv} onClick={() => {\n                    setTheMid(document.body.scrollHeight/2);\n                    window.scrollTo({\n                        top: document.body.scrollHeight,\n                        left: 0,\n                        behavior: 'smooth'\n                      })\n                }}>\n                    <h2>↓</h2>\n                </div>\n            </div>\n            <div className={styles.theWholeLeft}>\n                <div className={styles.topDiv} onClick={() => {\n                    setTheMid(document.body.scrollHeight/2);\n                    window.scrollTo({\n                        top: 0,\n                        left: 0,\n                        behavior: 'smooth'\n                    })\n                }}>\n                    <h2>↑</h2>\n                </div>\n                <div className={styles.midDiv} onClick={() => {\n                    setTheMid(document.body.scrollHeight/2);\n                    window.scrollTo({\n                        top: theMid,\n                        left: 0,\n                        behavior: 'smooth'\n                    })\n                }}>\n                </div>\n                <div className={styles.botDiv} onClick={() => {\n                    setTheMid(document.body.scrollHeight/2);\n                    window.scrollTo({\n                        top: document.body.scrollHeight,\n                        left: 0,\n                        behavior: 'smooth'\n                      })\n                }}>\n                    <h2>↓</h2>\n                </div>\n            </div>\n        </div>\n    )\n}\n","import { useEffect, useState } from \"react\";\nimport PkmnHomeList from \"./Component/PkmnHomeList/PkmnHomeList\"\nimport Scroll from \"./Component/Scroll/Scroll\"\nimport DefaultPkmn from \"./Component/Default.json\"\nfunction All(props) {\n  const [pkList, setPklist] = useState(DefaultPkmn)\n  const [theError, setTheError] = useState(\" \")\n  // as of right now, the max amount of pkmn is 1118 (the additional forms)\n  // all current pokemon above 898 are different forms of previous pokemons\n  let offset = 251;\n  let limit = 135;\n\n  const fetchAPI = async() => {\n    try {\n          const res = await fetch(`https://pokeapi.co/api/v2/pokemon?offset=${offset}&limit=${limit}`);\n          const data = await res.json();\n          setPklist(data.results)\n      } catch (err) {\n          setTheError(`${err}`);\n      }\n  }\n  useEffect(()=> {\n    fetchAPI();\n  }, [])\n  if(pkList === DefaultPkmn) {\n    return <h1>Loading...</h1>\n  }\n  return (\n    <div className=\"App\">\n      <h1>{props.page}</h1>\n      <Scroll />\n      <PkmnHomeList pkList={pkList}/>\n    </div>\n  );\n}\n\nexport default All;\n","import DefaultStats from \"../DefaultStats.json\"\nimport { useEffect, useState } from \"react\";\nimport {Link} from \"react-router-dom\"\nimport Tylers_Cap_Function from \"../Cap\"\n\nexport default function RandomPk () {\n    const [theNum, setTheNum] = useState(Math.floor(Math.random()*899))\n    const [theError, setTheError] = useState(\" \")\n    const [pkPic, setPkPic] = useState(DefaultStats.sprites.front_default)\n    const [pkPicShiny, setPkPicShiny] = useState(\"\")\n    const [pkName, setPkName] = useState(DefaultStats.species.name)\n    const [currentPic, setCurrentPic] = useState(DefaultStats.sprites.front_default)\n    const [currentPicShiny, setCurrentPicShiny] = useState(DefaultStats.sprites.front_shiny)\n    const fetchPoke = async() => {\n        try {\n            const res = await fetch(\"https://pokeapi.co/api/v2/pokemon/\" + theNum);\n            const data = await res.json();\n            setPkPic(data.sprites.front_default)\n            setPkPicShiny(data.sprites.front_shiny)\n            setPkName(data.species.name)\n        } catch (err) {\n            setTheError(`${err}`);\n        }\n    }\n    const transform= () => {\n        setCurrentPic(pkPic);\n    }\n    \n    const changeBack = () => {\n        setCurrentPic(DefaultStats.sprites.front_default);\n    }\n    const transformShiny= () => {\n        setCurrentPicShiny(pkPicShiny);\n    }\n    \n    const changeBackShiny = () => {\n        setCurrentPicShiny(DefaultStats.sprites.front_shiny);\n    }\n    const bothTransform = () => {\n        transformShiny();\n        transform();\n    }\n    const bothChangeBack = () => {\n        changeBackShiny();\n        changeBack();\n    }\n    useEffect(()=> {\n        fetchPoke();\n    }, [])\n    return (\n        <div className=\"theRandom\">\n            <Link to={`/All/${pkName}`}>\n                <div className=\"pkLinkBox\">\n                    <div className=\"theBG\">\n                        <h4 className=\"theRandomPkName\" onMouseEnter={bothTransform} onMouseLeave={bothChangeBack}>{Tylers_Cap_Function(pkName)}</h4>\n                        <div className=\"randomDiv\">\n                            <img onMouseEnter={transform} onMouseLeave={changeBack} src={currentPic} alt={`Ditto`} />\n                            <img onMouseEnter={transformShiny} onMouseLeave={changeBackShiny} src={currentPicShiny} alt={`Ditto`} /> <br/>\n                        </div>\n                    </div>\n                </div>\n            </Link>\n            <button onMouseEnter={bothTransform} onMouseLeave={bothChangeBack} className=\"randomButton\" onClick={()=> {\n                setTheNum(Math.floor(Math.random()*899))\n                fetchPoke()\n            }}>Random Transform</button>\n        </div>\n    )\n}","import RandomPk from \"./Component/RandomPk/RandomPk\";\n\nfunction Home() {\n  return (\n    <div className=\"Home\">\n      <div className=\"welcome\">\n        <h2>Welcome to the PkmnProj page. <br /></h2>\n        <h3>\n          This site was made using <span><a target='_blank' rel=\"noreferrer\" href=\"https://pokeapi.co/\">PokeAPI</a></span>, a pokemon database. <br />\n          We have a list of all the current Pokemons but not all of the information on all of them. <br />\n          To see the list of all Pokemons, click the All link.\n          Also remember that you you see the page of <span style={{fontWeight:\"bolder\"}}>DITTO</span>, then you might be at an error page.\n        </h3>\n      </div>\n      <div className=\"random\">\n        <h2>The Randomizer</h2>\n        <h3>Hover over Ditto or the button to see what Ditto will transform into. <br />\n          Click the button below to randomize to a different Pokemon. < br/> \n          Click the sprite to visit that Pokemon's page.\n        </h3>\n        <RandomPk />\n      </div>\n    </div>\n  );\n}\n\nexport default Home;\n","import { useEffect, useState } from \"react\";\nimport Tylers_Cap_Function from \"../Cap\"\nimport DefaultStats from \"../DefaultStats.json\"\nimport {Link} from \"react-router-dom\"\nimport styles from \"./Evolutions.module.css\"\n\nexport default function EvoSprite ({name, url}) {\n    const [pkPic, setPkPic] = useState(\"\")\n    const [pkDetails, setPkDetails] = useState(DefaultStats)\n    const [theError, setTheError] = useState(\" \")\n\n    const theSpeciesNum = url.split(\"/\").map((string) => parseInt(string)).filter((x) => x>0)[0]\n    /////////////fix forms and add forms for some pokemon that doesn't have all their forms\n    const fetchInfo = async() => {\nconsole.log(theSpeciesNum)\n        try {\n            const res = await fetch(`https://pokeapi.co/api/v2/pokemon/${theSpeciesNum}`);\n            const data = await res.json();\n            setPkPic(data.sprites.front_default)\n            setPkDetails(data)\n        } catch (err) {\n            setTheError(`${err}`);\n        }\n    }\n\n    useEffect(()=> {\n      fetchInfo();\n    }, [name])\n\n    return (\n        <div>\n            <Link to={`/All/${theSpeciesNum}`}>\n                <div className={styles.eachPk}>\n                    <p>No.{pkDetails.id} - {Tylers_Cap_Function(name)}</p>\n                    <img width=\"100px\" src={pkPic} alt={name} />\n                </div>\n            </Link>\n        </div>\n        \n        \n    )\n}\n","import { useEffect, useState } from \"react\";\nimport styles from \"./Evolutions.module.css\"\nimport DefaultEvo from \"../DefaultEvolutionChain.json\"\n\nimport EvoSprite from \"./EvoSprites\";\n\nexport default function Evolutions (props) {\n    const [theChain, setTheChain] = useState(DefaultEvo);\n    const [theError, setTheError] = useState(\" \")\n    const fetchPokeData = async() => {\n        try {\n            const res = await fetch(props.evoChain.url);\n            const data = await res.json();\n            setTheChain(data)\n        } catch (err) {\n            setTheError(`${err}`);\n        }\n    }\n    const checkFirst = () => {\n        return( <div className={styles.firstEvolution}>\n                <EvoSprite name={theChain.chain.species.name} url={theChain.chain.species.url}/>\n            </div>\n        )\n    }\n    const checkSecond = () => {\n        if(theChain.chain.evolves_to !== \"undefined\") {\n            const thePoke = theChain.chain.evolves_to.map((evos, i) => {\n                return(\n                    <EvoSprite key={i} name={evos.species.name} url={evos.species.url}/>\n                )\n            })\n            return (<div className={styles.secondEvolution}>\n                {thePoke}\n                </div>);\n        }\n    }\n    const checkThird = () => {\n        if(theChain.chain.evolves_to !== \"undefined\") {\n            const thePoke = theChain.chain.evolves_to.map((evos, i) => {\n                const theEvos = evos.evolves_to.map((lastEvos, j) => {\n                    return (\n                        <EvoSprite key={`${i}${j}`} name={lastEvos.species.name} url={lastEvos.species.url}/>\n                    )\n                })\n                return theEvos\n            })\n            return (<div className={styles.thirdEvolution}>\n                {thePoke}\n                </div>);\n        }\n    }\n    useEffect(()=> {\n        fetchPokeData();\n\n    }, [props.evoChain.url])\n    return (\n        <div className={styles.evolutionBox}>\n            <div className={styles.checkFirst}>\n            {checkFirst()}\n            </div>\n            <div className={styles.checkSecond}>\n            {checkSecond()}\n            </div>\n            <div className={styles.checkThird}>\n            {checkThird()}\n            </div>\n        </div>\n    )\n}\n/*\nexport default function Evolutions (props) {\n    const [theChain, setTheChain] = useState(DefaultEvo)\n    const [firstChain, setFirstChain] = useState(theChain.chain)\n    const [secondChain, setSecondChain] = useState(theChain.chain.evolves_to)\n    const [thirdChain, setThirdChain] = useState(theChain.chain.evolves_to[0].evolves_to)\n\n    console.log(firstChain.species.name)\n    console.log(secondChain.name)\n    console.log(thirdChain.name)\n    // const fetchPokeData = async() => {\n    //     try {\n    //         const res = await fetch(props.evoChain.url);\n    //         const data = await res.json();\n    //         setTheChain(data)\n    //     } catch (err) {\n    //         console.log(err);\n    //     }\n    // }\n    // const checkFirst = () => {\n    //     if(theChain.chain.evolves_to !== \"undefined\") {\n    //             return( <div className={styles.firstEvolution}>\n    //                     <EvoSprite name={theChain.chain.species.name} />\n    //                 </div>\n    //             )\n    //     }\n    // }\n    // const checkSecond = () => {\n    //     if(theChain.chain.evolves_to !== \"undefined\") {\n    //         const thePoke = theChain.chain.evolves_to.map((evos, i) => {\n    //             return(\n    //                 <EvoSprite key={i} name={evos.species.name} />\n    //             )\n    //         })\n    //         return (<div className={styles.secondEvolution}>\n    //             {thePoke}\n    //             </div>);\n    //     }\n    // }\n    // const checkThird = () => {\n    //     if(theChain.chain.evolves_to !== \"undefined\") {\n    //         const thePoke = theChain.chain.evolves_to.map((evos, i) => {\n    //             const theEvos = evos.evolves_to.map((lastEvos, j) => {\n    //                 return (\n    //                     <EvoSprite key={`${i}${j}`} name={lastEvos.species.name} />\n    //                 )\n    //             })\n    //             return theEvos\n    //         })\n    //         return (<div className={styles.thirdEvolution}>\n    //             {thePoke}\n    //             </div>);\n    //     }\n    // }\n    // useEffect(()=> {\n    //     fetchPokeData();\n\n    // }, [props.evoChain.url])\n    return (\n        <div className={styles.evolutionBox}>\n            <div className={styles.checkFirst}>\n            {checkFirst()}\n            </div>\n            <div className={styles.checkSecond}>\n            {checkSecond()}\n            </div>\n            <div className={styles.checkThird}>\n            {checkThird()}\n            </div>\n            hi\n        </div>\n    )\n}\n\n*/","import {useState, useEffect} from \"react\"\n\n\n\nexport default function PkVariety ({page}){\n    const [name, setName] = useState(\" \")\n    const [pic, setPic] = useState(\" \")\n    const [picShiny, setPicShiny] = useState(\" \")\n    const [currentPic, setCurrentPic] = useState (pic)\n    const [theError, setTheError] = useState(\" \")\n\n    const fetchPokeData = async() => {\n        try {\n            const res = await fetch(page);\n            const data = await res.json();\n            setName(data.name)\n            setPic(data.sprites.front_default)\n            setPicShiny(data.sprites.front_shiny)\n        } catch (err) {\n            setTheError(`${err}`);\n        }\n    }\n    const transform= () => {\n        setCurrentPic(picShiny);\n    }\n    \n    const changeBack = () => {\n        setCurrentPic(pic);\n    }\n    \n    useEffect(()=> {\n        fetchPokeData();\n    }, [page])\n    useEffect(()=> {\n        setCurrentPic(pic)\n    }, [pic])\n\n    return (\n        <div>\n            <img onMouseEnter={transform} onMouseLeave={changeBack} src={currentPic} alt={name} />\n        </div>\n    )\n}","import { useEffect, useState } from \"react\"\nimport Tylers_Cap_Function from \"../Cap\"\nimport styles from \"./Varieties.module.css\"\nimport PkVariety from \"./PkVariety/PkVariety\"\n\nexport default function Varieties ({pokeData, pkDetails}){\n    const [theSpecies, setTheSpecies] = useState([])\n    const theFunc = () => {\n        const theArr = pokeData.varieties.map((pokemon, i) => {\n            return(\n                <div key={i} className={styles.thePkContainer}>\n                    <p>{Tylers_Cap_Function(pokemon.pokemon.name)}</p>\n                    <PkVariety page={pokemon.pokemon.url}/>\n                </div>\n            )\n        } )\n        console.log(pkDetails.forms)\n        pkDetails.forms.forEach((pokemon, i) => {\n            theArr.push(\n                <div key={i} className={styles.thePkContainer}>\n                    <p>{Tylers_Cap_Function(pokemon.name)}</p>\n                    <PkVariety page={pokemon.url}/>\n                </div>\n            )\n        })\n        theArr.shift()\n        theArr.sort()\n        return theArr\n    }\n    useEffect(()=> {\n        setTheSpecies(theFunc());\n    },[pokeData])\n    return(\n        <div className={styles.containAllForms}>\n            <h2>{Tylers_Cap_Function(pokeData.name)} Forms</h2>\n            <div className={styles.formContainer}>\n                {theSpecies}\n            </div>\n        </div>\n    )\n}","import { useEffect, useState } from \"react\"\nimport Tylers_Cap_Function from \"../Cap\"\n\nconst TheTypes = ({pkDetails}) => {\n    const allTypes = pkDetails.types.map((type) => {\n        return type.type.name\n        })\n    if(allTypes.length === 1){\n        allTypes.push(allTypes[0])\n    }\n    const theTypes = [ ... new Set(allTypes)]\n    function TypeColor(type1, type2) {\n        const [color1, setColor1] = useState(\"white\")\n        const [color2, setColor2] = useState(color1)\n        const checkColor1=(type) => {\n            if(type === \"grass\")        {setColor1(\"green\");                    return;}\n            if(type === \"psychic\")      {setColor1(\"palevioletred\");            return;}\n            if(type === \"electric\")     {setColor1(\"yellow\");                   return;}\n            if(type === \"fire\")         {setColor1(\"orangered\");                return;}\n            if(type === \"rock\")         {setColor1(\"lightsalmon\");              return;}\n            if(type === \"ground\")       {setColor1(\"rgb(158, 90, 1)\");          return;}\n            if(type === \"poison\")       {setColor1(\"rgb(201, 0, 201)\");         return;}\n            if(type === \"dark\")         {setColor1(\"#2f504f\");                  return;}\n            if(type === \"bug\")          {setColor1(\"lightgreen\");               return;}\n            if(type === \"fighting\")     {setColor1(\"sienna\");                   return;}\n            if(type === \"normal\")       {setColor1(\"white\");                    return;}\n            if(type === \"water\")        {setColor1(\"rgb(22, 104, 255)\");        return;}\n            if(type === \"flying\")       {setColor1(\"rgb(188, 236, 255)\");       return;}\n            if(type === \"fairy\")        {setColor1(\"lightpink\");                return;}\n            if(type === \"steel\")        {setColor1(\"rgb(116, 116, 116)\");       return;}\n            if(type === \"dragon\")       {setColor1(\"rgb(73, 53, 160)\");         return;}\n            if(type === \"ice\")          {setColor1(\"rgb(0, 157, 255)\");         return;}\n            if(type === \"ghost\")        {setColor1(\"rgb(146, 112, 168)\");       return;}\n        }\n        const checkColor2=(type) => {\n            if(type === \"undefined\")    {setColor2(\"purple\");                   return;}\n            if(type === \"null\")         {setColor2(\"orange\");                   return;}\n            if(type === \"grass\")        {setColor2(\"green\");                    return;}\n            if(type === \"psychic\")      {setColor2(\"palevioletred\");            return;}\n            if(type === \"electric\")     {setColor2(\"yellow\");                   return;}\n            if(type === \"fire\")         {setColor2(\"orangered\");                return;}\n            if(type === \"rock\")         {setColor2(\"lightsalmon\");              return;}\n            if(type === \"ground\")       {setColor2(\"rgb(158, 90, 1)\");          return;}\n            if(type === \"poison\")       {setColor2(\"rgb(201, 0, 201)\");         return;}\n            if(type === \"dark\")         {setColor2(\"#2f504f\");                  return;}\n            if(type === \"bug\")          {setColor2(\"lightgreen\");               return;}\n            if(type === \"fighting\")     {setColor2(\"sienna\");                   return;}\n            if(type === \"normal\")       {setColor2(\"white\");                    return;}\n            if(type === \"water\")        {setColor2(\"rgb(22, 104, 255)\");        return;}\n            if(type === \"flying\")       {setColor2(\"rgb(188, 236, 255)\");       return;}\n            if(type === \"fairy\")        {setColor2(\"lightpink\");                return;}\n            if(type === \"steel\")        {setColor2(\"rgb(116, 116, 116)\");       return;}\n            if(type === \"dragon\")       {setColor2(\"rgb(73, 53, 160)\");         return;}\n            if(type === \"ice\")          {setColor2(\"rgb(0, 157, 255)\");         return;}\n            if(type === \"ghost\")        {setColor2(\"rgb(146, 112, 168)\");       return;}\n        }\n        useEffect(()=> {\n            checkColor1(type1);\n        }, [type1])\n        useEffect(()=> {\n            checkColor2(type2);\n        }, [type2])\n        \n        return ({\n            background: `linear-gradient( to right, ${color1}, ${color2})`,\n            width: `50%`,\n            border: `2px solid ${color2}`,\n            padding: `5px`,\n            display: \"flex\",\n            borderLeft: `none`,\n            clipPath: `polygon(0% 0%, 100% 0%, 95% 50%, 100% 100%, 0% 100%, 0% 0%)`,\n            textAlign: `left`,\n        })\n    }\n    const fontColor = (type) => {\n        if( type === \"dark\" || type === \"poison\" || type === \"dragon\"){\n            return {fontColor: \"white\"}\n        } else { return {fontColor: \"black\"}}\n    }\n    return (\n        <div style={TypeColor(allTypes[0], allTypes[1])}>\n            <p style={fontColor()}>Type: </p> \n            {theTypes.map((type,i) => {\n                return(\n                    <div key={i}>\n                        <p className={`${type} types`}>{Tylers_Cap_Function(type)}</p>\n                    </ div>\n                )\n            })}\n        </div>    \n    )\n}\nexport default TheTypes;","import { useEffect, useState } from \"react\";\nimport Evolutions from \"../Evolutions/Evolutions\"\nimport DefaultSpecies from \"../DefaultSpecies.json\"\nimport DefaultStats from \"../DefaultStats.json\"\nimport Varieties from \"../Varieties/Varieties\"\nimport Tylers_Cap_Function from \"../Cap\"\nimport Type from \"../Type/Type\"\nimport styles from \"./TheDetails.module.css\"\n\n\nexport default function TheDetails ({name, pkDetails}) {\n    const [pokeData, setPokeData] = useState(DefaultSpecies)\n    const [evoChain, setEvoChain] = useState(\"sd\")\n    const [theDeets, setTheDeets] = useState(DefaultStats)\n    const [theError, setTheError] = useState(\" \")\n    const fetchPokeData = async() => {\n        try {\n            const res = await fetch(\"https://pokeapi.co/api/v2/pokemon-species/\" + pkDetails.id);\n            const data = await res.json();\n            setPokeData(data)\n            setEvoChain(data.evolution_chain)\n        } catch (err) {\n            setTheError(`${err}`)\n        }\n    }\n    \n    useEffect(()=> {\n        fetchPokeData();\n        setTheDeets(pkDetails)\n    }, [pkDetails])\n    const shinyCheck = (pic, altText) => {\n        if(pic !== null){\n            return (\n                <div className={`${styles.shiny} ${styles.deetSiblings}`}>        \n                    <p>Shiny</p>\n                    <img src={pic} alt={altText} />\n                </div>\n            )\n        }\n    }\n\n    const textFlavor = () => {\n        const theStuff = pokeData.flavor_text_entries.filter((pkFlavorText) => {\n            if(pkFlavorText.language.name === \"en\"){\n                return pkFlavorText;\n            }\n        })\n        return theStuff[theStuff.length-1].flavor_text\n    }\n    const formCheck = () => {\n        if(pokeData.varieties.length >1 || pkDetails.forms.length > 1){\n            return <Varieties pokeData={pokeData} pkDetails={pkDetails}/>\n        }\n    }\n    const firstCap = Tylers_Cap_Function(theDeets.species.name)\n    return (\n        <div className={styles.mainDeetDiv}>\n            <h1> No.{pkDetails.id} - {firstCap}</h1>\n            <Type pkDetails={pkDetails}/>\n            <div className={styles.sprites}>\n                <div  className={`${styles.details} ${styles.deetSiblings}`}>\n                    <div>\n                        <p>Height: {theDeets.height/10} m</p>\n                        <p>Weight: {theDeets.weight/10} kg</p>\n                        <p>Color: {Tylers_Cap_Function(pokeData.color.name)}</p>\n                        <p>Shape: {Tylers_Cap_Function(pokeData.shape.name)}</p>\n                        <p>Genus: {pokeData.genera[7].genus}</p>\n                        <p>Generation: {Tylers_Cap_Function(pokeData.generation.name.toUpperCase())}</p>\n                    </div>\n                </div>\n                <div className={`${styles.regular} ${styles.deetSiblings}`}>\n                    <p>Regular</p>\n                    <img src={pkDetails.sprites.front_default} alt={firstCap} />\n                </div>\n                {shinyCheck(pkDetails.sprites.front_shiny, firstCap)}\n            </div>\n            <div className={styles.dex}>\n                <h2>Description</h2>\n                <p>{textFlavor()}</p>\n            </div>\n            <div className={styles.containsAllEvos}>\n                <h2>Evolution Stages</h2>\n                <Evolutions evoChain={evoChain} theName={name}/>\n            </div>\n            <div>\n                {formCheck()}\n            </div>\n        </div>\n    )\n}","import { useEffect, useState } from \"react\";\nimport DefaultStats from \"../DefaultStats.json\"\nimport TheDetails from \"../TheDetails/TheDetails\"\nexport default function PokeMn ({id}) {\n\n    const [pkDetails, setPkDetails] = useState(DefaultStats)\n    const [theError, setTheError] = useState(\" \")\n    \n    const fetchPoke = async() => {\n        try {\n            const res = await fetch(\"https://pokeapi.co/api/v2/pokemon/\" + id);\n            const data = await res.json();\n            setPkDetails(data)\n        } catch (err) {\n            setTheError(`${err}`);\n        }\n    }\n    useEffect(()=> {\n        fetchPoke();\n    }, [id])\n    return (\n        <div>\n            <TheDetails name={pkDetails.name} pkDetails={pkDetails}/>\n        </div>\n    )\n}\n","import DefaultSpecies from \"../DefaultSpecies.json\"\nimport DefaultStats from \"../DefaultStats.json\"\nimport Varieties from \"../Varieties/Varieties\"\nimport Tylers_Cap_Function from \"../Cap\"\nimport Type from \"../Type/Type\"\nimport styles from \"../TheDetails/TheDetails.module.css\"\n\n\n\n\n\nexport default function ErrorPage () {\n    const pokeData=DefaultSpecies\n    const theDeets =DefaultStats\n\n    const shinyCheck = (pic, altText) => {\n        if(pic !== null){\n            return (\n                <div className={`${styles.shiny} ${styles.deetSiblings}`}>        \n                    <p>Shiny</p>\n                    <img src={pic} alt={altText} />\n                </div>\n            )\n        }\n    }\n\n    const textFlavor = () => {\n        const theStuff = pokeData.flavor_text_entries.filter((pkFlavorText) => {\n            if(pkFlavorText.language.name === \"en\"){\n                return pkFlavorText;\n            }\n        })\n        return theStuff[theStuff.length-1].flavor_text\n    }\n    const formCheck = () => {\n        if(pokeData.varieties.length >1){\n            return <Varieties pokeData={pokeData} />\n        }\n    }\n    const firstCap = Tylers_Cap_Function(theDeets.name)\n    return (\n        <div className={styles.mainDeetDiv}>\n            <h1>THIS IS AN ERROR PAGE! <br/>\n            ENJOY DITTO INSTEAD!!!</h1>\n            <h1> No.{theDeets.id} - {firstCap}</h1>\n            <Type pkDetails={theDeets}/>\n            <div className={styles.sprites}>\n                <div  className={`${styles.details} ${styles.deetSiblings}`}>\n                    <div>\n                        <p>Height: {theDeets.height/10} m</p>\n                        <p>Weight: {theDeets.weight/10} kg</p>\n                        <p>Color: {Tylers_Cap_Function(pokeData.color.name)}</p>\n                        <p>Shape: {Tylers_Cap_Function(pokeData.shape.name)}</p>\n                        <p>Genus: {pokeData.genera[7].genus}</p>\n                        <p>Generation: {Tylers_Cap_Function(pokeData.generation.name.toUpperCase())}</p>\n                    </div>\n                </div>\n                <div className={`${styles.regular} ${styles.deetSiblings}`}>\n                    <p>Regular</p>\n                    <img src={theDeets.sprites.front_default} alt={firstCap} />\n                </div>\n                {shinyCheck(theDeets.sprites.front_shiny, firstCap)}\n            </div>\n            <div className={styles.dex}>\n                <h2>Description</h2>\n                <p>{textFlavor()}</p>\n            </div>\n        </div>\n    )\n}","import './App.css';\nimport { HashRouter as Router, Route, Switch, Link } from 'react-router-dom'\nimport All from './All'\nimport Home from './Home'\nimport PokeMn from \"./Component/PokeMn/PokeMn\"\nimport ErrorPage from \"./Component/ErrorPage/ErrorPage\"\n\n\n// Save the Component, key and path in an array of objects for each Route\n// You could write all routes by hand but I'm lazy annd this lets me use\n// the map method to just loop over them and make my routes\n// SWITCH is used so that it only ever matches one route at a time\n// If you don't want to use react router just rewrite the app component to not use it\n\nconst routes = [\n  {\n    Component: All,\n    key: 'All',\n    path: '/All'\n  },\n  {\n    Component: Home,\n    key: 'Home',\n    path: '/'\n  }\n]\n\nexport default function App () {\n  return (\n    <Router>\n      <header>\n        <h1 className=\"homePageLink\"><Link to=\"/\">PkmnProj</Link></h1>\n        <nav>\n          <Link className=\"allLink\" to={routes[0].path}>{routes[0].key}</Link>\n          <a className=\"PokeApiLink\" target='_blank' rel=\"noreferrer\" href=\"https://pokeapi.co/\">PokeAPI</a>\n        </nav>\n      </header>\n      <Switch>\n        {\n          routes.map(({key, Component, path}) => (\n            <Route\n            key={key}\n            path={path}\n            exact\n            render={props => <Component {...props} page={key} />}\n            />))\n          }\n          <Route exact path=\"/All/:id\" render={ThePoke => {\n                // console.log(ThePoke)\n              return <PokeMn {...ThePoke} id={ThePoke.match.params.id}/>\n            }} />\n          <Route component={ErrorPage} />\n      </Switch>\n      <footer>\n        <nav>\n          <Link className=\"allLink\" to={routes[0].path}>{routes[0].key}</Link>\n          <a className=\"PokeApiLink\" target='_blank' rel=\"noreferrer\" href=\"https://pokeapi.co/\">PokeAPI</a>\n        </nav>\n        <p>Made by Arichson using <span><a target='_blank' rel=\"noreferrer\" href=\"https://pokeapi.co/\">PokeAPI</a></span></p>\n      </footer>\n    </Router>\n  )\n}\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App'\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"deetSiblings\":\"TheDetails_deetSiblings__18ErL\",\"details\":\"TheDetails_details__2cOLO\",\"typeDiv\":\"TheDetails_typeDiv__12QJh\",\"containsAllEvos\":\"TheDetails_containsAllEvos__1xRKP\",\"sprites\":\"TheDetails_sprites__3Qq4J\",\"dex\":\"TheDetails_dex__mMGOR\",\"regular\":\"TheDetails_regular__1dT0C\",\"shiny\":\"TheDetails_shiny__3_jg-\"};"],"sourceRoot":""}